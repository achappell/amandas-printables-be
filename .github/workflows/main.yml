# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  APP_ENV: ${{ vars.APP_ENV }}
  SUPERADMIN_USERNAME: ${{ secrets.SUPERADMIN_USERNAME }}
  SUPERADMIN_PASSWORD: ${{ secrets.SUPERADMIN_PASSWORD }}
  PORT: ${{ vars.PORT }}
  COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }}
  HOST_NAME: ${{ vars.HOST_NAME }}
  DB_HOST: ${{ vars.DB_HOST }}
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PORT: ${{ vars.DB_PORT }}
  DB_SCHEMA: ${{ vars.DB_SCHEMA }}


jobs:
  build-backend:

    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Create env file
      run: |
          touch .env
          echo SUPERADMIN_USERNAME=${{ secrets.SUPERADMIN_USERNAME }} >> .env
          echo SUPERADMIN_PASSWORD=${{ secrets.SUPERADMIN_PASSWORD }} >> .env
          echo APP_ENV=${{ vars.APP_ENV }} >> .env
          echo PORT=${{ vars.PORT }} >> .env
          echo COOKIE_SECRET=${{ secrets.COOKIE_SECRET }} >> .env
          echo HOST_NAME=${{ vars.HOST_NAME }} >> .env
          echo DB_HOST=${{ vars.DB_HOST }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
          echo DB_USERNAME=${{ secrets.DB_USERNAME }} >> .env
          echo DB_PORT=${{ 5432 }} >> .env
          echo DB_SCHEMA=${{ public }} >> env
    - name: Build App
      run: npm install && env $(cat .env | grep -v \"#\" | xargs) pm2 startOrReload start.json


